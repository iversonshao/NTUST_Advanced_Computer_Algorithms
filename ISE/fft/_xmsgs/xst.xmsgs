<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/ctrl/ctrl.v" Line 56: Result of <arg fmt="%d" index="1">4</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">3</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/ctrl/ctrl.v" Line 59: Result of <arg fmt="%d" index="1">4</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">3</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/sp/s_p.v" Line 70: Assignment to <arg fmt="%s" index="1">s_p_flag_mux</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 39: Signal &lt;<arg fmt="%s" index="1">counter</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 40: Signal &lt;<arg fmt="%s" index="1">R4</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 52: Result of <arg fmt="%d" index="1">5</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">4</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 57: Signal &lt;<arg fmt="%s" index="1">counter</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 58: Signal &lt;<arg fmt="%s" index="1">data_in_3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 60: Signal &lt;<arg fmt="%s" index="1">R1</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 64: Signal &lt;<arg fmt="%s" index="1">counter</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 65: Signal &lt;<arg fmt="%s" index="1">data_in_3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 67: Signal &lt;<arg fmt="%s" index="1">R2</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 71: Signal &lt;<arg fmt="%s" index="1">counter</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 72: Signal &lt;<arg fmt="%s" index="1">data_in_3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 74: Signal &lt;<arg fmt="%s" index="1">R3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 78: Signal &lt;<arg fmt="%s" index="1">counter</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 79: Signal &lt;<arg fmt="%s" index="1">data_in_3</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/fft/mux.v" Line 81: Signal &lt;<arg fmt="%s" index="1">R4</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 42: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 43: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 44: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 45: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 46: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 47: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 48: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="91" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/multi16.v" Line 49: Signal &lt;<arg fmt="%s" index="1">in_17bit_b</arg>&gt; missing in the sensitivity list is added for synthesis purposes. HDL and post-synthesis simulations may differ as a result.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/butterfly.v" Line 243: Result of <arg fmt="%d" index="1">18</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">17</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="413" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/butterfly.v" Line 244: Result of <arg fmt="%d" index="1">18</arg>-bit expression is truncated to fit in <arg fmt="%d" index="2">17</arg>-bit target.
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/butterfly.v" Line 256: Assignment to <arg fmt="%s" index="1">temp_0</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/butterfly.v" Line 257: Assignment to <arg fmt="%s" index="1">temp_1</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/butterfly.v" Line 258: Assignment to <arg fmt="%s" index="1">temp_2</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="HDLCompiler" num="1127" delta="new" >"/home/ise/NTUST_Advanced_Computer_Algorithms/butterfly/butterfly.v" Line 259: Assignment to <arg fmt="%s" index="1">temp_3</arg> ignored, since the identifier is never used
</msg>

<msg type="warning" file="Xst" num="647" delta="new" >Input &lt;<arg fmt="%s" index="1">data_in_3&lt;135:34&gt;</arg>&gt; is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;33&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;32&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R1&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;33&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;32&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R2&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;33&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;32&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R3&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;33&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;32&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;31&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;30&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;29&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;28&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;27&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;26&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;25&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;24&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;6&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;5&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;4&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;3&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;2&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;1&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">R4&lt;0&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;23&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;22&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;21&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;20&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;19&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;18&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;17&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;16&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;15&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;14&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;13&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;12&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;11&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;10&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;9&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;8&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="warning" file="Xst" num="737" delta="new" >Found <arg fmt="%d" index="1">1</arg>-bit latch for signal &lt;<arg fmt="%s" index="2">neg_mul&lt;7&gt;</arg>&gt;. Latches may be generated from incomplete case or if statements. We do not recommend the use of latches in FPGA/CPLD designs, as they may lead to timing problems.
</msg>

<msg type="info" file="Xst" num="1767" delta="new" >HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">rotation_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">ctrl0</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;mux_flag&gt; </arg>
</msg>

<msg type="info" file="Xst" num="3218" delta="new" >HDL ADVISOR - The RAM &lt;<arg fmt="%s" index="1">Mram__n0174</arg>&gt; will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">rotation_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">ctrl</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;mux_flag&gt; </arg>
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDIR/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDII/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRI/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiDRR/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCIR/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCII/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRI/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiCRR/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBIR/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBII/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRI/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_7</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_8</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_9</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_12</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_10</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_11</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_13</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_14</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_17</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_15</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_16</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_18</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_19</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_22</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_20</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_21</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="warning" file="Xst" num="1294" delta="new" >Latch &lt;<arg fmt="%s" index="1">multiBRR/neg_mul_23</arg>&gt; is equivalent to a wire in block &lt;<arg fmt="%s" index="2">butterfly</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/counter_1_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/counter_2_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/counter_1_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/counter_2_1&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R15_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R13_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R7_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R5_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R14_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R6_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R15_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R13_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R1_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R3_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R7_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R5_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R13_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R5_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R11_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R9_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R1_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R3_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R14_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R6_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R13_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R5_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R15_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R7_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">reg10/R11_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;reg10/R9_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R15_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R7_17&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R4_0</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R12_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">p_s0/R4_17</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">fft</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;p_s0/R12_17&gt; </arg>
</msg>

</messages>

